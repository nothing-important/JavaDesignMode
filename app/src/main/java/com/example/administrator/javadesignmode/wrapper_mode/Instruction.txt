装饰者模式（Wrapper）：
装饰者模式以对客户端透明的方式扩展对象的功能（客户端并不会觉得对象在装饰钱和装饰后有什么不同），是继承关系的一个替代方案。
装饰者模式动态的将责任附加到对象身上。若要扩展功能，装饰者提供了比继承更有弹性的替代方案，可以在不创建更多子类的情况下，
将对象的功能加以扩展。

装饰者模式包含角色：
抽象构件（Component）：给出一个抽象接口，用以规范准备接收附加责任的对象
具体构件（ConcreteComponent）：定义一个将要接收附加责任的类
装饰角色（Decorator）：持有一个构件（Component）对象的实例，并定义一个与抽象构件接口一致的接口
具体装饰角色（ConcreteDecorator）：负责给构件对象“贴上”附加责任
